{
  "/workspaces/PersonWalletNextFrontDashcode": {
    "versionSfCore": null,
    "versionFramework": "4.4.18",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>",
      "sls": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "nextjs-app",
            "app": "nextjs-personwallet",
            "org": "augustodev",
            "provider": {
              "name": "aws",
              "region": "us-east-2",
              "runtime": "nodejs20.x",
              "stage": "dev",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "NextLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/nextjs-app-dev-next"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "nextjs-app",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/nextjs-app-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/nextjs-app-dev*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "nextjs-app",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "NextLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-2-7b937855-ca30",
                        "S3Key": "serverless/nextjs-app/dev/1736558416623-2025-01-11T01:20:16.623Z/next.zip"
                      },
                      "Handler": "handler.render",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "nextjs-app-dev-next",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "NextLogGroup"
                    ]
                  },
                  "NextLambdaVersionemad8eEFgnm9fl7ai66pQ9PHBUrH4kOWbqzx0WQbjlo": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "NextLambdaFunction"
                      },
                      "CodeSha256": "8XcO3Xsv/N8IyGQnIkYuE6G/G+OXPQPAkDH0rMhWicU="
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-nextjs-app",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceProxyVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "{proxy+}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodProxyVarAny": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "ANY",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceProxyVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "NextLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "NextLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodAny": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "ANY",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "NextLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "NextLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayDeployment1736558257937": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodProxyVarAny",
                      "ApiGatewayMethodAny"
                    ]
                  },
                  "NextLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "NextLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-us-east-2-7b937855-ca30",
                    "Export": {
                      "Name": "sls-nextjs-app-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "NextLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "NextLambdaVersionemad8eEFgnm9fl7ai66pQ9PHBUrH4kOWbqzx0WQbjlo"
                    },
                    "Export": {
                      "Name": "sls-nextjs-app-dev-NextLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-nextjs-app-dev-ServiceEndpoint"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "plugins": [
              "@sls-next/serverless-component",
              "serverless-offline"
            ],
            "custom": {
              "nextConfigDir": "./"
            },
            "functions": {
              "next": {
                "handler": "handler.render",
                "package": {
                  "individually": true,
                  "exclude": [
                    ".git/**",
                    "node_modules/**",
                    ".serverless/**",
                    ".next/**",
                    "src/tests/**"
                  ],
                  "artifact": ".serverless/next.zip"
                },
                "events": [
                  {
                    "http": {
                      "path": "{proxy+}",
                      "method": "any",
                      "integration": "AWS_PROXY"
                    }
                  },
                  {
                    "http": {
                      "path": "",
                      "method": "any",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "nextjs-app-dev-next",
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "NextLambdaVersionemad8eEFgnm9fl7ai66pQ9PHBUrH4kOWbqzx0WQbjlo"
              }
            }
          },
          "configFileDirPath": "/workspaces/PersonWalletNextFrontDashcode",
          "config": {
            "type": "sls"
          },
          "options": {},
          "stage": "dev",
          "dashboard": {
            "aws": {
              "accessKeyId": "<REDACTED>",
              "secretAccessKey": "<REDACTED>",
              "sessionToken": "<REDACTED>",
              "$source": {
                "CREDENTIALS_CODE": "<REDACTED>"
              }
            },
            "params": null,
            "accessKey": "<REDACTED>"
          },
          "logger": {
            "namespace": "s:core:resolver:sls",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "/workspaces/PersonWalletNextFrontDashcode",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "nextjs-app",
      "app": "nextjs-personwallet",
      "org": "augustodev",
      "provider": {
        "name": "aws",
        "region": "us-east-2",
        "runtime": "nodejs20.x",
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "NextLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/nextjs-app-dev-next"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "nextjs-app",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/nextjs-app-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/nextjs-app-dev*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "nextjs-app",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "NextLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-2-7b937855-ca30",
                  "S3Key": "serverless/nextjs-app/dev/1736558416623-2025-01-11T01:20:16.623Z/next.zip"
                },
                "Handler": "handler.render",
                "Runtime": "nodejs20.x",
                "FunctionName": "nextjs-app-dev-next",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "NextLogGroup"
              ]
            },
            "NextLambdaVersionemad8eEFgnm9fl7ai66pQ9PHBUrH4kOWbqzx0WQbjlo": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "NextLambdaFunction"
                },
                "CodeSha256": "8XcO3Xsv/N8IyGQnIkYuE6G/G+OXPQPAkDH0rMhWicU="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-nextjs-app",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceProxyVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "{proxy+}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodProxyVarAny": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "ANY",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceProxyVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "NextLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "NextLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodAny": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "ANY",
                "RequestParameters": {},
                "ResourceId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "NextLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "NextLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1736558257937": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodProxyVarAny",
                "ApiGatewayMethodAny"
              ]
            },
            "NextLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "NextLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-us-east-2-7b937855-ca30",
              "Export": {
                "Name": "sls-nextjs-app-dev-ServerlessDeploymentBucketName"
              }
            },
            "NextLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "NextLambdaVersionemad8eEFgnm9fl7ai66pQ9PHBUrH4kOWbqzx0WQbjlo"
              },
              "Export": {
                "Name": "sls-nextjs-app-dev-NextLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-nextjs-app-dev-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "plugins": [
        "@sls-next/serverless-component",
        "serverless-offline"
      ],
      "custom": {
        "nextConfigDir": "./"
      },
      "functions": {
        "next": {
          "handler": "handler.render",
          "package": {
            "individually": true,
            "exclude": [
              ".git/**",
              "node_modules/**",
              ".serverless/**",
              ".next/**",
              "src/tests/**"
            ],
            "artifact": ".serverless/next.zip"
          },
          "events": [
            {
              "http": {
                "path": "{proxy+}",
                "method": "any",
                "integration": "AWS_PROXY"
              }
            },
            {
              "http": {
                "path": "",
                "method": "any",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "nextjs-app-dev-next",
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "NextLambdaVersionemad8eEFgnm9fl7ai66pQ9PHBUrH4kOWbqzx0WQbjlo"
        }
      }
    },
    "serviceRawFile": "service: nextjs-app\n\napp: nextjs-personwallet\norg: augustodev\n\nprovider:\n  name: aws\n  region: us-east-2\n  runtime: nodejs20.x\n\nplugins:\n  - \"@sls-next/serverless-component\"\n  - \"serverless-offline\"\n\ncustom:\n  nextConfigDir: ./ # Diretório de configuração do Next.js\n\nfunctions:\n  next:\n    handler: handler.render\n    package:\n      individually: true # Empacota dependências por função\n      exclude:\n        - .git/**\n        - node_modules/**\n        - .serverless/**\n        - .next/**\n        - src/tests/**        \n    events:\n      - http:\n          path: /{proxy+}\n          method: any\n      - http:\n          path: /\n          method: any\n\n\n\n       \n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": {
      "message": "An error occurred: NextLambdaFunction - Resource handler returned message: \"Lambda function nextjs-app-dev-next could not be found\" (RequestToken: 85e3fa47-3815-ad41-f61c-c3e5c8e91067, HandlerErrorCode: NotFound).",
      "stack": "ServerlessError2: An error occurred: NextLambdaFunction - Resource handler returned message: \"Lambda function nextjs-app-dev-next could not be found\" (RequestToken: 85e3fa47-3815-ad41-f61c-c3e5c8e91067, HandlerErrorCode: NotFound).\n    at file:///root/.serverless/releases/4.4.18/package/dist/sf-core.js:727:830\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async AwsDeploy.update (file:///root/.serverless/releases/4.4.18/package/dist/sf-core.js:727:25457)\n    at async aws:deploy:deploy:updateStack (file:///root/.serverless/releases/4.4.18/package/dist/sf-core.js:738:6064)\n    at async PluginManager.runHooks (file:///root/.serverless/releases/4.4.18/package/dist/sf-core.js:925:9311)\n    at async PluginManager.invoke (file:///root/.serverless/releases/4.4.18/package/dist/sf-core.js:925:10082)\n    at async PluginManager.spawn (file:///root/.serverless/releases/4.4.18/package/dist/sf-core.js:925:10443)\n    at async PluginManager.runHooks (file:///root/.serverless/releases/4.4.18/package/dist/sf-core.js:925:9311)\n    at async PluginManager.invoke (file:///root/.serverless/releases/4.4.18/package/dist/sf-core.js:925:10082)\n    at async PluginManager.run (file:///root/.serverless/releases/4.4.18/package/dist/sf-core.js:925:10813)",
      "code": "AWS_CLOUD_FORMATION_UPDATE_STACK_INTERNAL_LAMBDA_FUNCTION_UPDATE_FAILED"
    },
    "params": {},
    "machineId": "b332890b1ede0ddc4640cc22f580f742",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "1e9da01b-648b-4507-b82a-9f55e318938e",
    "orgName": "augustodev",
    "userId": "xPlPKJTQ5rSH7k3JkD",
    "dashboard": {
      "isEnabledForService": true,
      "requiredAuthentication": false,
      "orgFeaturesInUse": {
        "providers": true,
        "monitoring": true
      },
      "orgObservabilityIntegrations": [
        {
          "integrationId": "7sQ8iHWAQQvBRcDfD87xoR",
          "awsAccountId": "841162671585",
          "status": "alive"
        }
      ],
      "serviceAppId": "nL8pKKrdbVBJybkz4b",
      "serviceProvider": {
        "accessKeyId": "<REDACTED>",
        "secretAccessKey": "<REDACTED>",
        "sessionToken": "<REDACTED>",
        "$source": {
          "CREDENTIALS_CODE": "<REDACTED>"
        }
      },
      "instanceParameters": null
    },
    "userName": "augustodev",
    "subscription": null,
    "userEmail": "augustodevgomes@gmail.com",
    "serviceProviderAwsRegion": "us-east-2",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "841162671585",
    "projectType": "traditional",
    "versionSf": "4.4.18",
    "serviceProviderAwsCfStackName": "nextjs-app-dev",
    "serviceUniqueId": "arn:aws:cloudformation:us-east-2:841162671585:stack/nextjs-app-dev/c9df0580-cf7e-11ef-b8bf-0a3c77654085",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-2:841162671585:stack/nextjs-app-dev/c9df0580-cf7e-11ef-b8bf-0a3c77654085",
    "serviceProviderAwsCfStackCreated": "2025-01-10T18:14:53.326Z",
    "serviceProviderAwsCfStackUpdated": "2025-01-11T01:20:22.654Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_ROLLBACK_IN_PROGRESS",
    "serviceProviderAwsCfStackOutputs": null
  }
}